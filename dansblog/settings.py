"""
Django settings for dansblog project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

#Importo load_dotenv para poder cargar las variables de entorno al proyecto
from dotenv import load_dotenv

#Para poder buscar las variables de entorno y otras rutas
import os

import pymysql
pymysql.install_as_MySQLdb()
#Cargando el variables de entorno
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DJANGO_DEBUG")

#Aqui le digo al proyecto que puede usar todas las rutas para cargar
ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    
    #Necesario para poder utilizar OAuth 2.0 y permite cargar el dominio que pueda utilizar la autenticacion
    'django.contrib.sites',
    
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #Aqui estan todas las aplicaciones del proyecto
    'User',
    'articles',
    'blog',
    
    #Aqui esta todo lo relacionado a la libreria allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    #Este es la red social que vamos a utilizar (Esto puede variar)
    'allauth.socialaccount.providers.google',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    
    #Necesario para poder cargar los static
    'whitenoise.middleware.WhiteNoiseMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    
    #Necesario para poder utilizar django-allauth
    'allauth.account.middleware.AccountMiddleware',
    
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dansblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        
        #Esta ruta nos dice la ubicacion de templates que seria en el directorio base o proyecto
        'DIRS': [BASE_DIR / 'templates'],
        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#Cambiar application por app por el cambio que hicimos a wsgi.py 
WSGI_APPLICATION = 'dansblog.wsgi.app'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        #En Engine la ultima terminacion depende de la base de datos que vamos a utilizar (mysql, mongodb, sqlite3)
        'ENGINE': 'django.db.backends.mysql',
        
        #Todos estos datos deben estar como variables de entorno (Sacar el archivo .env a la hora de produccion por temas de seguridad)
        'NAME': os.getenv('DJANGO_DB_NAME'),
        'USER': os.getenv('DJANGO_DB_USER'),
        'PASSWORD': os.getenv('DJANGO_DB_PASSWORD'),
        'HOST': os.getenv('DJANGO_DB_HOST'),
        'PORT': os.getenv('DJANGO_DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

#Esta variable establece mi modelo de la app User en el nuevo modelo de user
AUTH_USER_MODEL="User.CustomUser"

#Importante para usar django-allauth
AUTHENTICATION_BACKENDS= (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend"
)
SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION ="none"

'''
Comento esto porque ya no se va a usar un login casual sino
que sera por google unicamente
'''

#Esta ruta es la redireccion del login hacia el endpoint principal
#Asignando los campos del form de signup.html
#ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']

LOGIN_REDIRECT_URL='/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'
ACCOUNT_SIGNUP_REDIRECT_URL='/'

#Conectando el adapter con el proyecto
SOCIALACCOUNT_ADAPTER = 'blog.adapters.MySocialAccountAdapter'


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


#Aqui estan todo lo relacionado al la configuracion de static (Sacar de comentario a staticfiles_dirs cuando sea ya produccion)

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Esto es para cuando usas collectstatic
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#Aqui para poder agregar la red social deseada

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}